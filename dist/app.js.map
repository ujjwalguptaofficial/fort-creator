{"version":3,"sources":["webpack://Fort-Creator/webpack/bootstrap","webpack://Fort-Creator/external \"fs-extra\"","webpack://Fort-Creator/external \"path\"","webpack://Fort-Creator/external \"inquirer\"","webpack://Fort-Creator/external \"fs\"","webpack://Fort-Creator/external \"child_process\"","webpack://Fort-Creator/external \"commander\"","webpack://Fort-Creator/external \"cli-spinner\"","webpack://Fort-Creator/external \"os\"","webpack://Fort-Creator/./src/helpers/ask_for_add.ts","webpack://Fort-Creator/./src/helpers/ask_for_project_language.ts","webpack://Fort-Creator/./src/helpers/ensure_dir.ts","webpack://Fort-Creator/./src/helpers/run_command.ts","webpack://Fort-Creator/./src/helpers/get_snake_case.ts","webpack://Fort-Creator/./src/helpers/getPackageVersion.ts","webpack://Fort-Creator/./src/helpers/run_cmd_sync .ts","webpack://Fort-Creator/./src/helpers/index.ts","webpack://Fort-Creator/./src/handlers/deploy_handler.ts","webpack://Fort-Creator/./src/handlers/handle_start.ts","webpack://Fort-Creator/./src/tshelpers/get_controller_template.ts","webpack://Fort-Creator/./src/tshelpers/get_guard_template.ts","webpack://Fort-Creator/./src/tshelpers/get_shield_template.ts","webpack://Fort-Creator/./src/tshelpers/get_wall_template.ts","webpack://Fort-Creator/./src/tshelpers/index.ts","webpack://Fort-Creator/./src/handlers/handler_file_add.ts","webpack://Fort-Creator/./src/handlers/handle_clone.ts","webpack://Fort-Creator/./src/handlers/index.ts","webpack://Fort-Creator/./src/index.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = require(\"fs-extra\");","module.exports = require(\"path\");","module.exports = require(\"inquirer\");","module.exports = require(\"fs\");","module.exports = require(\"child_process\");","module.exports = require(\"commander\");","module.exports = require(\"cli-spinner\");","module.exports = require(\"os\");","import { prompt } from \"inquirer\";\n\nexport const askForAdd = function () {\n    return new Promise(function (res, rej) {\n        var questions = [{\n            name: 'add_info',\n            message: \"what do you want to add\",\n            type: 'list',\n            choices: [\"controller\", \"shield\", \"wall\", \"guard\"]\n        }];\n        prompt(questions).then(function (answers) {\n            res(answers.add_info);\n        });\n    });\n}","import { prompt } from \"inquirer\";\nexport const askForProjectLanguage = function () {\n    return new Promise(function (res, rej) {\n        const questions = [{\n            name: 'project_language',\n            message: \"choose project language\",\n            type: 'list',\n            choices: [\"typescript\", \"javascript\"]\n        }];\n        prompt(questions).\n            then(function (answers) {\n                res(answers.project_language);\n            });\n    });\n}","import { existsSync, mkdirSync } from \"fs\";\n\nexport const ensureDir = function (dir: string) {\n    if (!existsSync(dir)) {\n        mkdirSync(dir);\n    }\n}\n\n","import { exec } from \"child_process\";\n\nexport const runCommand = function (cmd: string, finishMessage?: string) {\n    return new Promise(function (res, rej) {\n        var command = exec(cmd);\n        command.on(\"error\", function (err) {\n            console.error(err);\n        })\n        command.stdout.on('data', function (data) {\n            console.log(data.toString());\n        });\n        command.stderr.on('data', function (data) {\n            console.log(data.toString());\n        });\n        command.on('exit', function (code) {\n            res(code);\n        });\n    });\n}","export const getSnakeCase = function (value) {\n  return value.replace(/\\W+/g, \" \")\n    .split(/ |\\B(?=[A-Z])/)\n    .map(word => word.toLowerCase())\n    .join('_');\n};","import { readFileSync } from \"fs-extra\";\nimport * as Path from \"path\";\n\nexport const getPackageVersion = function () {\n    const pathOfPackage = Path.join(__dirname, \".././package.json\");\n    const contents = readFileSync(pathOfPackage, {\n        encoding: \"utf8\"\n    });\n    const packageInfo = JSON.parse(contents);\n    return packageInfo.version;\n}","import { spawn, execSync } from \"child_process\";\n\nexport const runCmdSync = function (cmd) {\n    execSync(cmd, { stdio: 'inherit' });\n}","export * from './ask_for_add';\nexport * from './ask_for_project_language';\nexport * from './ensure_dir';\nexport * from './run_command';\nexport * from './get_snake_case';\nexport * from './getPackageVersion';\nexport * from './run_cmd_sync ';","import { runCommand } from \"../helpers\";\n\nexport const handleDeploy = function (deployFolderName: string) {\n    runCommand(`BUILD_FOLDER=${deployFolderName} npm run deploy`).then(function (code) {\n        if (code == 0) {\n            console.log(\"build created for deploy\")\n        } else {\n            console.log(`unable to create build for deploy, process exited with code ${code.toString()}`);\n        }\n    });\n}","import { runCommand } from \"../helpers\";\n\nexport const handleStart = function () {\n    runCommand(\"npm run start\").then(function (code) {\n        if (code != 0) {\n            console.log(`unable to start dev server, process exited with code ${code}`);\n        }\n    });\n}","export const getControllerTemplate = function (controllerName: string) {\n    return `\nimport { Controller, DefaultWorker, Worker, textResult } from \"fortjs\";\n\nexport class ${controllerName} extends Controller {\n\n    @DefaultWorker()\n    async index() {\n        \n    }\n}`\n}","export const getGuardTemplate = function (guardName: string) {\n    return `\nimport { Guard, textResult } from \"fortjs\";\n\nexport class ${guardName} extends Guard {\n    async check() {\n        \n    }\n}`\n}","export const getShieldTemplate = function (shieldName: string) {\n    return `\nimport { Shield, textResult } from \"fortjs\";\nexport class ${shieldName} extends Shield {\n    async protect() {\n        \n    }\n}`\n}","export const getWallTemplate = function (wallName: string) {\n    return `\nimport { Wall, textResult } from \"fortjs\";\n\nexport class ${wallName} extends Wall {\n    async onIncoming() {\n        \n    }\n}    \n`\n}","export * from './get_controller_template';\nexport * from './get_guard_template';\nexport * from './get_shield_template';\nexport * from './get_wall_template';","import { askForAdd, getSnakeCase } from \"../helpers\";\nimport {\n    prompt\n} from \"inquirer\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\nimport { getControllerTemplate, getShieldTemplate, getGuardTemplate, getWallTemplate } from \"../tshelpers\";\nimport { ensureDir } from \"../helpers\";\n\nexport const handleFileAdd = function (language: string) {\n    askForAdd().\n        then(function (fileType: string) {\n            askForControllerName().then(function (file) {\n                const fileInfo = path.parse(file);\n                const componentName = fileInfo.name;\n                const extension = language == \"typescript\" ? \"ts\" : \"js\";\n                let fileNameWithExtension: string = getSnakeCase(componentName) + \".\" + extension;\n                const folderName = `${fileType}s`;\n                ensureDir(folderName);\n                const content = createContentBasedOnFileType(fileType, componentName);\n                const filePath = `${folderName}/${fileNameWithExtension}`\n                fs.writeFileSync(filePath, content, {\n                    encoding: \"utf-8\"\n                });\n                console.log(`file created at - \"${filePath}\"`)\n            })\n        });\n}\n\nconst createContentBasedOnFileType = function (fileType: string, componentName: string) {\n    switch (fileType) {\n        case \"controller\": return getControllerTemplate(componentName);\n        case \"shield\": return getShieldTemplate(componentName);\n        case \"guard\": return getGuardTemplate(componentName);\n        case \"wall\": return getWallTemplate(componentName);\n    }\n    return \"\";\n}\n\nconst askForControllerName = function () {\n    return new Promise<string>(function (res, rej) {\n        var questions = [{\n            name: 'controller_name',\n            message: \"Enter controller name\",\n            type: 'input',\n            choices: [\"controller\", \"shield\", \"wall\",]\n        }];\n        prompt(questions).\n            then(function (answers) {\n                res(answers.controller_name);\n            });\n    });\n}","import { runCommand, runCmdSync } from \"../helpers\";\nimport { removeSync, moveSync, ensureDir, pathExistsSync } from \"fs-extra\";\nimport * as Path from \"path\";\nimport { Spinner } from \"cli-spinner\";\nimport { EOL } from \"os\";\n\nconst typescriptProjectUrl = \"https://github.com/ujjwalguptaofficial/fortjs-typescript-starter\";\nconst javascriptProjectUrl = \"https://github.com/ujjwalguptaofficial/fortjs-javascript-starter\";\n\n\nclass SpinnerHelper {\n    static spinnerInstance;\n    static init(text: string) {\n        const spinnerInstance = SpinnerHelper.spinnerInstance = new Spinner(`${text}.. %s`);\n        spinnerInstance.setSpinnerString(18);\n        spinnerInstance.start();\n    }\n\n    static stop() {\n        SpinnerHelper.spinnerInstance.stop();\n    }\n}\nexport const handleClone = async function (type, name) {\n    if (pathExistsSync(name)) {\n        console.error(`A folder with name ${name} already exist in the current directoy`);\n        return;\n    }\n    const cloneProjPath = Path.join(__dirname, name);\n    // clone with less history\n    var command = `git clone --depth=1 `;\n    // create the url based on type\n    command += type === \"typescript\" ? typescriptProjectUrl : javascriptProjectUrl;\n    // clone inside the provided name\n    command += \" \" + `${cloneProjPath}`;\n    try {\n        let exitCode = await runCommand(command)\n        if (exitCode != 0) {\n            console.log(`unable to clone, process exited with code ${exitCode.toString()}`)\n        }\n        else {\n            SpinnerHelper.init(\"setting up project\");\n            // Remove the .git directory\n\n            removeSync(Path.join(cloneProjPath, '.git/'));\n            // copy project directory\n            // ensureDir(name);\n            moveSync(cloneProjPath, name);\n            SpinnerHelper.stop();\n            SpinnerHelper.init(`downloading dependency`);\n            // downloading dependencies\n            runCmdSync(`cd ${name} && npm install && npm install fortjs@latest`);\n            SpinnerHelper.stop();\n            if (exitCode != 0) {\n                console.log(`unable to install dependencies, process exited with code ${exitCode.toString()}`)\n            }\n            else {\n                console.log(`${EOL}new project ${name} created`);\n            }\n        }\n    }\n    catch (err) {\n        console.error(err);\n        SpinnerHelper.stop();\n    }\n}","export * from \"./deploy_handler\";\nexport * from \"./handle_start\";\nexport * from './handler_file_add';\nexport * from './handle_clone';","import { askForProjectLanguage, getPackageVersion } from \"./helpers\";\nimport { handleDeploy, handleStart, handleFileAdd, handleClone } from \"./handlers\";\nimport * as commander from \"commander\";\nimport { pathExistsSync, readFileSync } from \"fs-extra\";\n\nconst errorMessageForInvalidProjectDirectory = \"Seems like you are not inside project directory.Please move to project dir & run the command again\";\n\nexport const processCommand = function (commander) {\n    if (commander.new) {\n        const appname = typeof commander.new != \"string\" ? \"fortjs-app\" : commander.new;\n        askForProjectLanguage().\n            then(function (language) {\n                handleClone(language, appname);\n            });\n    }\n    else if (commander.add || commander.start || commander.deploy) {\n        var content;\n        try {\n            const pathOfPackage = \"./package.json\";\n            if (!pathExistsSync(pathOfPackage)) {\n                console.error(errorMessageForInvalidProjectDirectory);\n                return;\n            }\n            content = readFileSync(pathOfPackage, {\n                encoding: \"utf8\"\n            });\n        } catch (ex) {\n            console.error(errorMessageForInvalidProjectDirectory);\n        }\n        const packageInfo = JSON.parse(content);\n        if (packageInfo && packageInfo.project && packageInfo.project.framework === \"fortjs\") {\n            if (commander.start) {\n                handleStart();\n            } else if (commander.deploy) {\n                var deployFolderName = typeof commander.deploy == \"string\" ? commander.deploy : \"bin\";\n                handleDeploy(deployFolderName);\n            } else if (commander.add) {\n                handleFileAdd(packageInfo.project.language);\n            }\n        } else {\n            console.error(errorMessageForInvalidProjectDirectory);\n        }\n    }\n    else {\n        console.log('invalid command');\n    }\n}\n\n\ncommander.version(getPackageVersion(), '-v, --version').\n    option('new [folderName]', 'Create new project & put the content inside the specified folder').\n    option('start', 'start development server').\n    option('deploy [deploymentFolderName]', 'create build for deployment').\n    option('add', 'add the components').\n    parse(process.argv);\n\nprocessCommand(commander);\n// console.log(commander);"],"sourceRoot":""}