{"version":3,"sources":["webpack://Fort-Creator/webpack/bootstrap","webpack://Fort-Creator/external \"inquirer\"","webpack://Fort-Creator/external \"fs\"","webpack://Fort-Creator/external \"fs-extra\"","webpack://Fort-Creator/external \"child_process\"","webpack://Fort-Creator/external \"path\"","webpack://Fort-Creator/external \"commander\"","webpack://Fort-Creator/external \"os\"","webpack://Fort-Creator/external \"cli-spinner\"","webpack://Fort-Creator/external \"github-directory-downloader\"","webpack://Fort-Creator/./src/helpers/ask_for_add.ts","webpack://Fort-Creator/./src/helpers/ask_for_project_language.ts","webpack://Fort-Creator/./src/helpers/ensure_dir.ts","webpack://Fort-Creator/./src/helpers/run_command.ts","webpack://Fort-Creator/./src/helpers/get_snake_case.ts","webpack://Fort-Creator/./src/helpers/getPackageVersion.ts","webpack://Fort-Creator/./src/helpers/run_cmd_sync .ts","webpack://Fort-Creator/./src/helpers/set_env.ts","webpack://Fort-Creator/./src/helpers/ask_for_folder_name.ts","webpack://Fort-Creator/./src/helpers/create_project.ts","webpack://Fort-Creator/./src/constants/index.ts","webpack://Fort-Creator/./src/helpers/get_project_package_info.ts","webpack://Fort-Creator/./src/helpers/is_fort_project.ts","webpack://Fort-Creator/./src/helpers/index.ts","webpack://Fort-Creator/./src/handlers/deploy_handler.ts","webpack://Fort-Creator/./src/handlers/handle_start.ts","webpack://Fort-Creator/./src/templates/get_controller_template.ts","webpack://Fort-Creator/./src/templates/get_guard_template.ts","webpack://Fort-Creator/./src/templates/get_shield_template.ts","webpack://Fort-Creator/./src/templates/get_wall_template.ts","webpack://Fort-Creator/./src/templates/index.ts","webpack://Fort-Creator/./src/handlers/handler_file_add.ts","webpack://Fort-Creator/./src/handlers/index.ts","webpack://Fort-Creator/./src/index.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","module.exports = require(\"inquirer\");","module.exports = require(\"fs\");","module.exports = require(\"fs-extra\");","module.exports = require(\"child_process\");","module.exports = require(\"path\");","module.exports = require(\"commander\");","module.exports = require(\"os\");","module.exports = require(\"cli-spinner\");","module.exports = require(\"github-directory-downloader\");","import { prompt } from \"inquirer\";\n\nexport const askToChooseComponent = async () => {\n    var questions = [{\n        name: 'componentChoice',\n        message: \"Choose the component to add\",\n        type: 'list',\n        choices: [\"Controller\", \"Shield\", \"Wall\", \"Guard\"]\n    }];\n    const result = await prompt(questions);\n    return result.componentChoice as string;\n}","import { prompt } from \"inquirer\";\n\nexport const askForProjectLanguage = async function () {\n    const questions = [{\n        name: 'project_language',\n        message: \"Choose project language\",\n        type: 'list',\n        choices: [\"typescript\", \"javascript\"]\n    }];\n    const answers = await prompt(questions);\n    return answers.project_language;\n}","import { existsSync, mkdirSync } from \"fs\";\n\nexport const ensureDir = function (dir: string) {\n    if (!existsSync(dir)) {\n        mkdirSync(dir);\n    }\n}\n\n","import { exec } from \"child_process\";\n\nexport const runCommand = function (cmd: string, finishMessage?: string) {\n    return new Promise(function (res, rej) {\n        var command = exec(cmd);\n        command.on(\"error\", function (err) {\n            console.error(err);\n        })\n        command.stdout.on('data', function (data) {\n            console.log(data.toString());\n        });\n        command.stderr.on('data', function (data) {\n            console.log(data.toString());\n        });\n        command.on('exit', function (code) {\n            res(code);\n        });\n    });\n}","export const getSnakeCase = function (value) {\n  return value.replace(/\\W+/g, \" \")\n    .split(/ |\\B(?=[A-Z])/)\n    .map(word => word.toLowerCase())\n    .join('_');\n};","import { readFileSync } from \"fs-extra\";\nimport * as Path from \"path\";\n\nexport const getPackageVersion = function () {\n    const pathOfPackage = Path.join(__dirname, \".././package.json\");\n    const contents = readFileSync(pathOfPackage, {\n        encoding: \"utf8\"\n    });\n    const packageInfo = JSON.parse(contents);\n    return packageInfo.version;\n}","import { spawn, execSync } from \"child_process\";\n\nexport const runCmdSync = function (cmd) {\n    execSync(cmd, { stdio: 'inherit' });\n}","export const setEnv = function (key, value) {\n    process.env[key] = value;\n}","import { prompt } from \"inquirer\";\n\n\n\nexport const askForFolderName = async function () {\n    console.log('Enter folder name to create project inside folder, leave blank for current folder');\n    const questions = [{\n        name: 'folder_name',\n        message: \"Folder name - \",\n        type: 'input',\n    }];\n    const answers = await prompt(questions);\n    return answers.folder_name;\n}","import { EOL } from \"os\";\nimport { runCommand } from \".\";\nimport { Spinner } from \"cli-spinner\";\nimport * as path from \"path\";\nimport ghDownload from \"github-directory-downloader\";\n\nclass SpinnerHelper {\n    static spinnerInstance;\n    static init(text: string) {\n        const spinnerInstance = SpinnerHelper.spinnerInstance = new Spinner(`${text}.. %s`);\n        spinnerInstance.setSpinnerString(18);\n        spinnerInstance.start();\n    }\n\n    static stop() {\n        SpinnerHelper.spinnerInstance.stop();\n    }\n}\n\nexport const createProject = async function (type, folderName) {\n    const projectPath = path.join(process.cwd(), folderName);\n    var templatePath = \"https://github.com/ujjwalguptaofficial/fortjs-templates/tree/main/\" + type;\n    try {\n\n        SpinnerHelper.init(\"Setting up project\");\n        const downloadStat = await ghDownload(templatePath, projectPath, {\n            muteLog: true\n        });\n        if (!downloadStat.success) {\n            const err = `error - ${downloadStat.error}, project path = ${projectPath}, template path = ${templatePath}`;\n            throw new Error(err || 'Can not download the template repo, please contact author if you are seeing this error.');\n        }\n        SpinnerHelper.stop();\n        SpinnerHelper.init(`Installing dependency`);\n        // downloading dependencies\n        let exitCode = await runCommand(`cd ${projectPath} && npm i`);\n        SpinnerHelper.stop();\n        if (exitCode != 0) {\n            console.log(`Unable to install dependencies, process exited with code ${exitCode.toString()}`)\n        }\n        else {\n            console.log(`${EOL}new project '${projectPath}' initiated`);\n            if (folderName) {\n                console.log(`Execute command 'cd ${folderName}' to enter into project directory.`)\n            }\n            console.log(`Execute command - 'fort-creator dev' for startin dev server.`);\n        }\n    }\n    catch (err) {\n        console.error(err);\n        SpinnerHelper.stop();\n    }\n}","export const ERROR_MSG_FOR_INVALID_PROJECT_DIRECTORY = \"Seems like you are not inside project directory. Please move to project directory and run the command again\";\n","import { ERROR_MSG_FOR_INVALID_PROJECT_DIRECTORY } from \"@/constants\";\nimport { pathExistsSync, readFileSync } from \"fs-extra\";\n\nexport const getProjectPackageInfo = () => {\n    var content;\n    try {\n        const pathOfPackage = \"./package.json\";\n        if (!pathExistsSync(pathOfPackage)) {\n            console.error(ERROR_MSG_FOR_INVALID_PROJECT_DIRECTORY);\n            return false;\n        }\n        content = readFileSync(pathOfPackage, {\n            encoding: \"utf8\"\n        });\n    } catch (ex) {\n        console.error(ERROR_MSG_FOR_INVALID_PROJECT_DIRECTORY);\n        return false;\n    }\n    const packageInfo = JSON.parse(content);\n    return packageInfo;\n}","import { getProjectPackageInfo } from \"./get_project_package_info\";\n\nexport const isFortProject = () => {\n    const packageInfo = getProjectPackageInfo();\n    return packageInfo && packageInfo.project && packageInfo.project.framework === \"fortjs\";\n}","export * from './ask_for_add';\nexport * from './ask_for_project_language';\nexport * from './ensure_dir';\nexport * from './run_command';\nexport * from './get_snake_case';\nexport * from './getPackageVersion';\nexport * from './run_cmd_sync ';\nexport * from './set_env';\nexport * from './ask_for_folder_name';\nexport * from './create_project';\nexport * from './is_fort_project';\nexport * from './get_project_package_info';","import { runCommand, setEnv } from \"../helpers\";\n\nexport const handleDeploy = async function (deployFolderName: string) {\n    setEnv('BUILD_FOLDER', deployFolderName);\n    setEnv('NODE_ENV', 'production');\n    const code = await runCommand(`npm run deploy`);\n    if (code == 0) {\n        console.log(\"Build created for deploy\")\n    } else {\n        console.log(`Unable to create build for deploy, process exited with code ${code.toString()}`);\n    }\n}","import { runCommand } from \"../helpers\";\n\nexport const handleStart = function () {\n    runCommand(\"npm run start\").then(function (code) {\n        if (code != 0) {\n            console.log(`Unable to start dev server, process exited with code ${code}`);\n        }\n    });\n}","export const getControllerTemplate = function (controllerName: string) {\n    return `\nimport { Controller, defaultWorker, worker, textResult } from \"fortjs\";\n\nexport class ${controllerName} extends Controller {\n\n    @defaultWorker()\n    async index() {\n        \n    }\n}`\n}","export const getGuardTemplate = function (guardName: string) {\n    return `\nimport { Guard, textResult } from \"fortjs\";\n\nexport class ${guardName} extends Guard {\n    async check() {\n        \n    }\n}`\n}","export const getShieldTemplate = function (shieldName: string) {\n    return `\nimport { Shield, textResult } from \"fortjs\";\nexport class ${shieldName} extends Shield {\n    async protect() {\n        \n    }\n}`\n}","export const getWallTemplate = function (wallName: string) {\n    return `\nimport { Wall, textResult } from \"fortjs\";\n\nexport class ${wallName} extends Wall {\n    async onIncoming() {\n        \n    }\n}    \n`\n}","export * from './get_controller_template';\nexport * from './get_guard_template';\nexport * from './get_shield_template';\nexport * from './get_wall_template';","import { askToChooseComponent, getSnakeCase, ensureDir } from \"@/helpers\";\nimport { prompt } from \"inquirer\";\nimport * as fs from \"fs\";\nimport { getControllerTemplate, getShieldTemplate, getGuardTemplate, getWallTemplate } from \"@/templates\";\n\nexport const handleFileAdd = async (language: string) => {\n    const fileType: string = await askToChooseComponent();\n    let componentName = await askForComponentName(fileType);\n    componentName = componentName[0].toUpperCase() + componentName.substr(1);\n    const indexOfFileType = componentName.length - fileType.length - 1\n    if (componentName.toLowerCase().includes(fileType.toLowerCase(), indexOfFileType)) {\n        componentName = componentName.substr(0, indexOfFileType + 1);\n    }\n    componentName += fileType;\n    const extension = language === \"typescript\" ? \"ts\" : \"js\";\n    let fileNameWithExtension: string = getSnakeCase(componentName) + \".\" + extension;\n    const folderName = `${fileType.toLowerCase()}s`;\n    ensureDir(folderName);\n    const content = createContentBasedOnFileType(fileType, componentName);\n    const filePath = `src/${folderName}/${fileNameWithExtension}`;\n    fs.writeFileSync(filePath, content, {\n        encoding: \"utf-8\"\n    });\n    console.log(`file created at - \"${filePath}\"`);\n}\n\nconst createContentBasedOnFileType = function (fileType: string, componentName: string) {\n    switch (fileType.toLowerCase()) {\n        case \"controller\": return getControllerTemplate(componentName);\n        case \"shield\": return getShieldTemplate(componentName);\n        case \"guard\": return getGuardTemplate(componentName);\n        case \"wall\": return getWallTemplate(componentName);\n    }\n    return \"\";\n}\n\nconst askForComponentName = async function (type: string) {\n    var questions = [\n        {\n            name: 'componentName',\n            message: `Enter ${type} name`,\n            type: 'input'\n        }\n    ];\n\n    const answers = await prompt(questions);\n    return answers.componentName as string;\n}","export * from \"./deploy_handler\";\nexport * from \"./handle_start\";\nexport * from './handler_file_add';","import { Command } from 'commander';\nconst program = new Command();\nimport { askForFolderName, askForProjectLanguage, createProject, getPackageVersion, getProjectPackageInfo, isFortProject } from \"@/helpers\";\nimport { handleDeploy, handleFileAdd, handleStart } from '@/handlers';\n\nprogram.version(getPackageVersion(), '-v, --version');\n\nprogram.command('dev').description('start development server').action(() => {\n    if (isFortProject()) {\n        handleStart();\n    }\n});\n\nprogram.command('deploy').description('Create build for deployment').action(() => {\n    if (isFortProject()) {\n        handleDeploy('');\n    }\n});\n\nprogram.command('add').description('Add component').action(() => {\n    if (isFortProject()) {\n        const packageInfo = getProjectPackageInfo();\n        const language = packageInfo && packageInfo.project && packageInfo.project.language;\n        handleFileAdd(\n            language\n        );\n    }\n});\n\nprogram.command('init').description('Initiate new project').action(async () => {\n    const language = await askForProjectLanguage();\n    const folderName = await askForFolderName();\n    createProject(language, folderName);\n})\n\nconst parsed = program.parse(process.argv);\n\n// console.log('parsed', parsed);\n\n// processCommand(program.opts());\n"],"sourceRoot":""}